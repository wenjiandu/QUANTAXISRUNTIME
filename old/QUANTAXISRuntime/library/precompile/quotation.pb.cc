// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quotation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "quotation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QUANTAXIS_Runtime_Quotation {
class quotation_reqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<quotation_req>
     _instance;
} _quotation_req_default_instance_;
class quotation_repDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<quotation_rep>
     _instance;
} _quotation_rep_default_instance_;

namespace protobuf_quotation_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_req, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, exchange_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, ticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, last_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, pre_close_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, close_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, pre_open_interest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, open_interest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, pre_settlement_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, settlement_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, upper_limit_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, lower_limit_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, pre_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, curr_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, data_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, avg_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, iopv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_buy_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_sell_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_buy_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_buy_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_sell_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quotation_rep, etf_sell_money_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(quotation_req)},
  { 12, -1, sizeof(quotation_rep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_quotation_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_quotation_rep_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "quotation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _quotation_req_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_quotation_req_default_instance_);_quotation_rep_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_quotation_rep_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017quotation.proto\022\033QUANTAXIS_Runtime_Quo"
      "tation\"y\n\rquotation_req\022\023\n\013exchange_id\030\001"
      " \001(\t\022\014\n\004type\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\n\n\002ip\030\004"
      " \001(\t\022\014\n\004time\030\005 \001(\t\022\014\n\004date\030\006 \001(\t\022\017\n\007mess"
      "age\030\007 \001(\t\"\216\005\n\rquotation_rep\022\023\n\013exchange_"
      "id\030\001 \001(\t\022\016\n\006ticker\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\022"
      "\n\nlast_price\030\004 \001(\001\022\027\n\017pre_close_price\030\005 "
      "\001(\001\022\014\n\004open\030\006 \001(\001\022\014\n\004high\030\007 \001(\001\022\013\n\003low\030\010"
      " \001(\001\022\r\n\005close\030\t \001(\001\022\023\n\013close_price\030\n \001(\001"
      "\022\031\n\021pre_open_interest\030\013 \001(\001\022\025\n\ropen_inte"
      "rest\030\014 \001(\001\022\034\n\024pre_settlement_price\030\r \001(\001"
      "\022\030\n\020settlement_price\030\016 \001(\001\022\031\n\021upper_limi"
      "t_price\030\017 \001(\001\022\031\n\021lower_limit_price\030\020 \001(\001"
      "\022\021\n\tpre_delta\030\021 \001(\001\022\022\n\ncurr_delta\030\022 \001(\001\022"
      "\021\n\tdata_time\030\023 \001(\022\022\020\n\010datetime\030\024 \001(\t\022\013\n\003"
      "qty\030\025 \001(\022\022\016\n\006volume\030\026 \001(\002\022\013\n\003vol\030\027 \001(\002\022\020"
      "\n\010turnover\030\030 \001(\001\022\021\n\tavg_price\030\031 \001(\001\022\014\n\004i"
      "opv\030\032 \001(\001\022\025\n\retf_buy_count\030\033 \001(\021\022\026\n\016etf_"
      "sell_count\030\034 \001(\021\022\023\n\013etf_buy_qty\030\035 \001(\001\022\025\n"
      "\retf_buy_money\030\036 \001(\001\022\024\n\014etf_sell_qty\030\037 \001"
      "(\001\022\026\n\016etf_sell_money\030  \001(\0012\337\002\n\023QR_Quotat"
      "ionService\022j\n\020QR_quotation_p2p\022*.QUANTAX"
      "IS_Runtime_Quotation.quotation_req\032*.QUA"
      "NTAXIS_Runtime_Quotation.quotation_rep\022l"
      "\n\020QA_quotation_p2s\022*.QUANTAXIS_Runtime_Q"
      "uotation.quotation_req\032*.QUANTAXIS_Runti"
      "me_Quotation.quotation_rep0\001\022n\n\020QA_quota"
      "tion_s2s\022*.QUANTAXIS_Runtime_Quotation.q"
      "uotation_req\032*.QUANTAXIS_Runtime_Quotati"
      "on.quotation_rep(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quotation.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_quotation_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int quotation_req::kExchangeIdFieldNumber;
const int quotation_req::kTypeFieldNumber;
const int quotation_req::kCodeFieldNumber;
const int quotation_req::kIpFieldNumber;
const int quotation_req::kTimeFieldNumber;
const int quotation_req::kDateFieldNumber;
const int quotation_req::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

quotation_req::quotation_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_quotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Quotation.quotation_req)
}
quotation_req::quotation_req(const quotation_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time().size() > 0) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Quotation.quotation_req)
}

void quotation_req::SharedCtor() {
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

quotation_req::~quotation_req() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Quotation.quotation_req)
  SharedDtor();
}

void quotation_req::SharedDtor() {
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void quotation_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* quotation_req::descriptor() {
  protobuf_quotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const quotation_req& quotation_req::default_instance() {
  protobuf_quotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

quotation_req* quotation_req::New(::google::protobuf::Arena* arena) const {
  quotation_req* n = new quotation_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void quotation_req::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool quotation_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exchange_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_req.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Quotation.quotation_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Quotation.quotation_req)
  return false;
#undef DO_
}

void quotation_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange_id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip(), output);
  }

  // string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->time(), output);
  }

  // string date = 6;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Quotation.quotation_req)
}

::google::protobuf::uint8* quotation_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange_id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip(), target);
  }

  // string time = 5;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->time(), target);
  }

  // string date = 6;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_req.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Quotation.quotation_req)
  return target;
}

size_t quotation_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string time = 5;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // string date = 6;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void quotation_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  GOOGLE_DCHECK_NE(&from, this);
  const quotation_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const quotation_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Quotation.quotation_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Quotation.quotation_req)
    MergeFrom(*source);
  }
}

void quotation_req::MergeFrom(const quotation_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void quotation_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quotation_req::CopyFrom(const quotation_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Quotation.quotation_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quotation_req::IsInitialized() const {
  return true;
}

void quotation_req::Swap(quotation_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void quotation_req::InternalSwap(quotation_req* other) {
  using std::swap;
  exchange_id_.Swap(&other->exchange_id_);
  type_.Swap(&other->type_);
  code_.Swap(&other->code_);
  ip_.Swap(&other->ip_);
  time_.Swap(&other->time_);
  date_.Swap(&other->date_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata quotation_req::GetMetadata() const {
  protobuf_quotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// quotation_req

// string exchange_id = 1;
void quotation_req::clear_exchange_id() {
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::exchange_id() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
  return exchange_id_.GetNoArena();
}
void quotation_req::set_exchange_id(const ::std::string& value) {
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
}
#if LANG_CXX11
void quotation_req::set_exchange_id(::std::string&& value) {
  
  exchange_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
}
#endif
void quotation_req::set_exchange_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
}
void quotation_req::set_exchange_id(const char* value, size_t size) {
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
}
::std::string* quotation_req::mutable_exchange_id() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
  return exchange_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_exchange_id() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
  
  return exchange_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_exchange_id(::std::string* exchange_id) {
  if (exchange_id != NULL) {
    
  } else {
    
  }
  exchange_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange_id);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.exchange_id)
}

// string type = 2;
void quotation_req::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::type() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.type)
  return type_.GetNoArena();
}
void quotation_req::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.type)
}
#if LANG_CXX11
void quotation_req::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.type)
}
#endif
void quotation_req::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.type)
}
void quotation_req::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.type)
}
::std::string* quotation_req::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_type() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.type)
}

// string code = 3;
void quotation_req::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::code() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.code)
  return code_.GetNoArena();
}
void quotation_req::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.code)
}
#if LANG_CXX11
void quotation_req::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.code)
}
#endif
void quotation_req::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.code)
}
void quotation_req::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.code)
}
::std::string* quotation_req::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_code() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.code)
}

// string ip = 4;
void quotation_req::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::ip() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
  return ip_.GetNoArena();
}
void quotation_req::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
}
#if LANG_CXX11
void quotation_req::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
}
#endif
void quotation_req::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
}
void quotation_req::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
}
::std::string* quotation_req::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_ip() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.ip)
}

// string time = 5;
void quotation_req::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::time() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.time)
  return time_.GetNoArena();
}
void quotation_req::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.time)
}
#if LANG_CXX11
void quotation_req::set_time(::std::string&& value) {
  
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.time)
}
#endif
void quotation_req::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.time)
}
void quotation_req::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.time)
}
::std::string* quotation_req::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_time() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.time)
}

// string date = 6;
void quotation_req::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::date() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.date)
  return date_.GetNoArena();
}
void quotation_req::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.date)
}
#if LANG_CXX11
void quotation_req::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.date)
}
#endif
void quotation_req::set_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.date)
}
void quotation_req::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.date)
}
::std::string* quotation_req::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_date() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.date)
}

// string message = 7;
void quotation_req::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_req::message() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_req.message)
  return message_.GetNoArena();
}
void quotation_req::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_req.message)
}
#if LANG_CXX11
void quotation_req::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_req.message)
}
#endif
void quotation_req::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_req.message)
}
void quotation_req::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_req.message)
}
::std::string* quotation_req::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_req.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_req::release_message() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_req.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_req::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_req.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int quotation_rep::kExchangeIdFieldNumber;
const int quotation_rep::kTickerFieldNumber;
const int quotation_rep::kCodeFieldNumber;
const int quotation_rep::kLastPriceFieldNumber;
const int quotation_rep::kPreClosePriceFieldNumber;
const int quotation_rep::kOpenFieldNumber;
const int quotation_rep::kHighFieldNumber;
const int quotation_rep::kLowFieldNumber;
const int quotation_rep::kCloseFieldNumber;
const int quotation_rep::kClosePriceFieldNumber;
const int quotation_rep::kPreOpenInterestFieldNumber;
const int quotation_rep::kOpenInterestFieldNumber;
const int quotation_rep::kPreSettlementPriceFieldNumber;
const int quotation_rep::kSettlementPriceFieldNumber;
const int quotation_rep::kUpperLimitPriceFieldNumber;
const int quotation_rep::kLowerLimitPriceFieldNumber;
const int quotation_rep::kPreDeltaFieldNumber;
const int quotation_rep::kCurrDeltaFieldNumber;
const int quotation_rep::kDataTimeFieldNumber;
const int quotation_rep::kDatetimeFieldNumber;
const int quotation_rep::kQtyFieldNumber;
const int quotation_rep::kVolumeFieldNumber;
const int quotation_rep::kVolFieldNumber;
const int quotation_rep::kTurnoverFieldNumber;
const int quotation_rep::kAvgPriceFieldNumber;
const int quotation_rep::kIopvFieldNumber;
const int quotation_rep::kEtfBuyCountFieldNumber;
const int quotation_rep::kEtfSellCountFieldNumber;
const int quotation_rep::kEtfBuyQtyFieldNumber;
const int quotation_rep::kEtfBuyMoneyFieldNumber;
const int quotation_rep::kEtfSellQtyFieldNumber;
const int quotation_rep::kEtfSellMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

quotation_rep::quotation_rep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_quotation_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Quotation.quotation_rep)
}
quotation_rep::quotation_rep(const quotation_rep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exchange_id().size() > 0) {
    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticker().size() > 0) {
    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datetime().size() > 0) {
    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  ::memcpy(&last_price_, &from.last_price_,
    static_cast<size_t>(reinterpret_cast<char*>(&etf_sell_money_) -
    reinterpret_cast<char*>(&last_price_)) + sizeof(etf_sell_money_));
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Quotation.quotation_rep)
}

void quotation_rep::SharedCtor() {
  exchange_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etf_sell_money_) -
      reinterpret_cast<char*>(&last_price_)) + sizeof(etf_sell_money_));
  _cached_size_ = 0;
}

quotation_rep::~quotation_rep() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Quotation.quotation_rep)
  SharedDtor();
}

void quotation_rep::SharedDtor() {
  exchange_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void quotation_rep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* quotation_rep::descriptor() {
  protobuf_quotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const quotation_rep& quotation_rep::default_instance() {
  protobuf_quotation_2eproto::InitDefaults();
  return *internal_default_instance();
}

quotation_rep* quotation_rep::New(::google::protobuf::Arena* arena) const {
  quotation_rep* n = new quotation_rep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void quotation_rep::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&etf_sell_money_) -
      reinterpret_cast<char*>(&last_price_)) + sizeof(etf_sell_money_));
  _internal_metadata_.Clear();
}

bool quotation_rep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exchange_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exchange_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticker().data(), static_cast<int>(this->ticker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_rep.ticker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_rep.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double last_price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_close_price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_close_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double open = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double high = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double low = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double close = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double close_price = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &close_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_open_interest = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_open_interest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double open_interest = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &open_interest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_settlement_price = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_settlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double settlement_price = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &settlement_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double upper_limit_price = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upper_limit_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lower_limit_price = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lower_limit_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double pre_delta = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pre_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double curr_delta = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &curr_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 data_time = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &data_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string datetime = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datetime().data(), static_cast<int>(this->datetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Quotation.quotation_rep.datetime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 qty = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float volume = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vol = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double turnover = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double avg_price = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double iopv = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(209u /* 209 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iopv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 etf_buy_count = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &etf_buy_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 etf_sell_count = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &etf_sell_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double etf_buy_qty = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 233 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &etf_buy_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double etf_buy_money = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(241u /* 241 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &etf_buy_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double etf_sell_qty = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &etf_sell_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double etf_sell_money = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &etf_sell_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Quotation.quotation_rep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Quotation.quotation_rep)
  return false;
#undef DO_
}

void quotation_rep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exchange_id(), output);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.ticker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticker(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // double last_price = 4;
  if (this->last_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->last_price(), output);
  }

  // double pre_close_price = 5;
  if (this->pre_close_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->pre_close_price(), output);
  }

  // double open = 6;
  if (this->open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->open(), output);
  }

  // double high = 7;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->high(), output);
  }

  // double low = 8;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->low(), output);
  }

  // double close = 9;
  if (this->close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->close(), output);
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->close_price(), output);
  }

  // double pre_open_interest = 11;
  if (this->pre_open_interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->pre_open_interest(), output);
  }

  // double open_interest = 12;
  if (this->open_interest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->open_interest(), output);
  }

  // double pre_settlement_price = 13;
  if (this->pre_settlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->pre_settlement_price(), output);
  }

  // double settlement_price = 14;
  if (this->settlement_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->settlement_price(), output);
  }

  // double upper_limit_price = 15;
  if (this->upper_limit_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->upper_limit_price(), output);
  }

  // double lower_limit_price = 16;
  if (this->lower_limit_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->lower_limit_price(), output);
  }

  // double pre_delta = 17;
  if (this->pre_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->pre_delta(), output);
  }

  // double curr_delta = 18;
  if (this->curr_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->curr_delta(), output);
  }

  // sint64 data_time = 19;
  if (this->data_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(19, this->data_time(), output);
  }

  // string datetime = 20;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), static_cast<int>(this->datetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.datetime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->datetime(), output);
  }

  // sint64 qty = 21;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(21, this->qty(), output);
  }

  // float volume = 22;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->volume(), output);
  }

  // float vol = 23;
  if (this->vol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->vol(), output);
  }

  // double turnover = 24;
  if (this->turnover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->turnover(), output);
  }

  // double avg_price = 25;
  if (this->avg_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->avg_price(), output);
  }

  // double iopv = 26;
  if (this->iopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->iopv(), output);
  }

  // sint32 etf_buy_count = 27;
  if (this->etf_buy_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(27, this->etf_buy_count(), output);
  }

  // sint32 etf_sell_count = 28;
  if (this->etf_sell_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(28, this->etf_sell_count(), output);
  }

  // double etf_buy_qty = 29;
  if (this->etf_buy_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->etf_buy_qty(), output);
  }

  // double etf_buy_money = 30;
  if (this->etf_buy_money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->etf_buy_money(), output);
  }

  // double etf_sell_qty = 31;
  if (this->etf_sell_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->etf_sell_qty(), output);
  }

  // double etf_sell_money = 32;
  if (this->etf_sell_money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->etf_sell_money(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Quotation.quotation_rep)
}

::google::protobuf::uint8* quotation_rep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exchange_id().data(), static_cast<int>(this->exchange_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exchange_id(), target);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.ticker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticker(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // double last_price = 4;
  if (this->last_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->last_price(), target);
  }

  // double pre_close_price = 5;
  if (this->pre_close_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->pre_close_price(), target);
  }

  // double open = 6;
  if (this->open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->open(), target);
  }

  // double high = 7;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->high(), target);
  }

  // double low = 8;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->low(), target);
  }

  // double close = 9;
  if (this->close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->close(), target);
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->close_price(), target);
  }

  // double pre_open_interest = 11;
  if (this->pre_open_interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->pre_open_interest(), target);
  }

  // double open_interest = 12;
  if (this->open_interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->open_interest(), target);
  }

  // double pre_settlement_price = 13;
  if (this->pre_settlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->pre_settlement_price(), target);
  }

  // double settlement_price = 14;
  if (this->settlement_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->settlement_price(), target);
  }

  // double upper_limit_price = 15;
  if (this->upper_limit_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->upper_limit_price(), target);
  }

  // double lower_limit_price = 16;
  if (this->lower_limit_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->lower_limit_price(), target);
  }

  // double pre_delta = 17;
  if (this->pre_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->pre_delta(), target);
  }

  // double curr_delta = 18;
  if (this->curr_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->curr_delta(), target);
  }

  // sint64 data_time = 19;
  if (this->data_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(19, this->data_time(), target);
  }

  // string datetime = 20;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), static_cast<int>(this->datetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Quotation.quotation_rep.datetime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->datetime(), target);
  }

  // sint64 qty = 21;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(21, this->qty(), target);
  }

  // float volume = 22;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->volume(), target);
  }

  // float vol = 23;
  if (this->vol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->vol(), target);
  }

  // double turnover = 24;
  if (this->turnover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->turnover(), target);
  }

  // double avg_price = 25;
  if (this->avg_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->avg_price(), target);
  }

  // double iopv = 26;
  if (this->iopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->iopv(), target);
  }

  // sint32 etf_buy_count = 27;
  if (this->etf_buy_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(27, this->etf_buy_count(), target);
  }

  // sint32 etf_sell_count = 28;
  if (this->etf_sell_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(28, this->etf_sell_count(), target);
  }

  // double etf_buy_qty = 29;
  if (this->etf_buy_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->etf_buy_qty(), target);
  }

  // double etf_buy_money = 30;
  if (this->etf_buy_money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->etf_buy_money(), target);
  }

  // double etf_sell_qty = 31;
  if (this->etf_sell_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->etf_sell_qty(), target);
  }

  // double etf_sell_money = 32;
  if (this->etf_sell_money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->etf_sell_money(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Quotation.quotation_rep)
  return target;
}

size_t quotation_rep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string exchange_id = 1;
  if (this->exchange_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exchange_id());
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticker());
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string datetime = 20;
  if (this->datetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datetime());
  }

  // double last_price = 4;
  if (this->last_price() != 0) {
    total_size += 1 + 8;
  }

  // double pre_close_price = 5;
  if (this->pre_close_price() != 0) {
    total_size += 1 + 8;
  }

  // double open = 6;
  if (this->open() != 0) {
    total_size += 1 + 8;
  }

  // double high = 7;
  if (this->high() != 0) {
    total_size += 1 + 8;
  }

  // double low = 8;
  if (this->low() != 0) {
    total_size += 1 + 8;
  }

  // double close = 9;
  if (this->close() != 0) {
    total_size += 1 + 8;
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    total_size += 1 + 8;
  }

  // double pre_open_interest = 11;
  if (this->pre_open_interest() != 0) {
    total_size += 1 + 8;
  }

  // double open_interest = 12;
  if (this->open_interest() != 0) {
    total_size += 1 + 8;
  }

  // double pre_settlement_price = 13;
  if (this->pre_settlement_price() != 0) {
    total_size += 1 + 8;
  }

  // double settlement_price = 14;
  if (this->settlement_price() != 0) {
    total_size += 1 + 8;
  }

  // double upper_limit_price = 15;
  if (this->upper_limit_price() != 0) {
    total_size += 1 + 8;
  }

  // double lower_limit_price = 16;
  if (this->lower_limit_price() != 0) {
    total_size += 2 + 8;
  }

  // double pre_delta = 17;
  if (this->pre_delta() != 0) {
    total_size += 2 + 8;
  }

  // double curr_delta = 18;
  if (this->curr_delta() != 0) {
    total_size += 2 + 8;
  }

  // sint64 data_time = 19;
  if (this->data_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->data_time());
  }

  // sint64 qty = 21;
  if (this->qty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->qty());
  }

  // float volume = 22;
  if (this->volume() != 0) {
    total_size += 2 + 4;
  }

  // float vol = 23;
  if (this->vol() != 0) {
    total_size += 2 + 4;
  }

  // double turnover = 24;
  if (this->turnover() != 0) {
    total_size += 2 + 8;
  }

  // double avg_price = 25;
  if (this->avg_price() != 0) {
    total_size += 2 + 8;
  }

  // double iopv = 26;
  if (this->iopv() != 0) {
    total_size += 2 + 8;
  }

  // sint32 etf_buy_count = 27;
  if (this->etf_buy_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->etf_buy_count());
  }

  // sint32 etf_sell_count = 28;
  if (this->etf_sell_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->etf_sell_count());
  }

  // double etf_buy_qty = 29;
  if (this->etf_buy_qty() != 0) {
    total_size += 2 + 8;
  }

  // double etf_buy_money = 30;
  if (this->etf_buy_money() != 0) {
    total_size += 2 + 8;
  }

  // double etf_sell_qty = 31;
  if (this->etf_sell_qty() != 0) {
    total_size += 2 + 8;
  }

  // double etf_sell_money = 32;
  if (this->etf_sell_money() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void quotation_rep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  GOOGLE_DCHECK_NE(&from, this);
  const quotation_rep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const quotation_rep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Quotation.quotation_rep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Quotation.quotation_rep)
    MergeFrom(*source);
  }
}

void quotation_rep::MergeFrom(const quotation_rep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exchange_id().size() > 0) {

    exchange_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exchange_id_);
  }
  if (from.ticker().size() > 0) {

    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.datetime().size() > 0) {

    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  if (from.last_price() != 0) {
    set_last_price(from.last_price());
  }
  if (from.pre_close_price() != 0) {
    set_pre_close_price(from.pre_close_price());
  }
  if (from.open() != 0) {
    set_open(from.open());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.close() != 0) {
    set_close(from.close());
  }
  if (from.close_price() != 0) {
    set_close_price(from.close_price());
  }
  if (from.pre_open_interest() != 0) {
    set_pre_open_interest(from.pre_open_interest());
  }
  if (from.open_interest() != 0) {
    set_open_interest(from.open_interest());
  }
  if (from.pre_settlement_price() != 0) {
    set_pre_settlement_price(from.pre_settlement_price());
  }
  if (from.settlement_price() != 0) {
    set_settlement_price(from.settlement_price());
  }
  if (from.upper_limit_price() != 0) {
    set_upper_limit_price(from.upper_limit_price());
  }
  if (from.lower_limit_price() != 0) {
    set_lower_limit_price(from.lower_limit_price());
  }
  if (from.pre_delta() != 0) {
    set_pre_delta(from.pre_delta());
  }
  if (from.curr_delta() != 0) {
    set_curr_delta(from.curr_delta());
  }
  if (from.data_time() != 0) {
    set_data_time(from.data_time());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.vol() != 0) {
    set_vol(from.vol());
  }
  if (from.turnover() != 0) {
    set_turnover(from.turnover());
  }
  if (from.avg_price() != 0) {
    set_avg_price(from.avg_price());
  }
  if (from.iopv() != 0) {
    set_iopv(from.iopv());
  }
  if (from.etf_buy_count() != 0) {
    set_etf_buy_count(from.etf_buy_count());
  }
  if (from.etf_sell_count() != 0) {
    set_etf_sell_count(from.etf_sell_count());
  }
  if (from.etf_buy_qty() != 0) {
    set_etf_buy_qty(from.etf_buy_qty());
  }
  if (from.etf_buy_money() != 0) {
    set_etf_buy_money(from.etf_buy_money());
  }
  if (from.etf_sell_qty() != 0) {
    set_etf_sell_qty(from.etf_sell_qty());
  }
  if (from.etf_sell_money() != 0) {
    set_etf_sell_money(from.etf_sell_money());
  }
}

void quotation_rep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quotation_rep::CopyFrom(const quotation_rep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Quotation.quotation_rep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quotation_rep::IsInitialized() const {
  return true;
}

void quotation_rep::Swap(quotation_rep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void quotation_rep::InternalSwap(quotation_rep* other) {
  using std::swap;
  exchange_id_.Swap(&other->exchange_id_);
  ticker_.Swap(&other->ticker_);
  code_.Swap(&other->code_);
  datetime_.Swap(&other->datetime_);
  swap(last_price_, other->last_price_);
  swap(pre_close_price_, other->pre_close_price_);
  swap(open_, other->open_);
  swap(high_, other->high_);
  swap(low_, other->low_);
  swap(close_, other->close_);
  swap(close_price_, other->close_price_);
  swap(pre_open_interest_, other->pre_open_interest_);
  swap(open_interest_, other->open_interest_);
  swap(pre_settlement_price_, other->pre_settlement_price_);
  swap(settlement_price_, other->settlement_price_);
  swap(upper_limit_price_, other->upper_limit_price_);
  swap(lower_limit_price_, other->lower_limit_price_);
  swap(pre_delta_, other->pre_delta_);
  swap(curr_delta_, other->curr_delta_);
  swap(data_time_, other->data_time_);
  swap(qty_, other->qty_);
  swap(volume_, other->volume_);
  swap(vol_, other->vol_);
  swap(turnover_, other->turnover_);
  swap(avg_price_, other->avg_price_);
  swap(iopv_, other->iopv_);
  swap(etf_buy_count_, other->etf_buy_count_);
  swap(etf_sell_count_, other->etf_sell_count_);
  swap(etf_buy_qty_, other->etf_buy_qty_);
  swap(etf_buy_money_, other->etf_buy_money_);
  swap(etf_sell_qty_, other->etf_sell_qty_);
  swap(etf_sell_money_, other->etf_sell_money_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata quotation_rep::GetMetadata() const {
  protobuf_quotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// quotation_rep

// string exchange_id = 1;
void quotation_rep::clear_exchange_id() {
  exchange_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_rep::exchange_id() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
  return exchange_id_.GetNoArena();
}
void quotation_rep::set_exchange_id(const ::std::string& value) {
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
}
#if LANG_CXX11
void quotation_rep::set_exchange_id(::std::string&& value) {
  
  exchange_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
}
#endif
void quotation_rep::set_exchange_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
}
void quotation_rep::set_exchange_id(const char* value, size_t size) {
  
  exchange_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
}
::std::string* quotation_rep::mutable_exchange_id() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
  return exchange_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_rep::release_exchange_id() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
  
  return exchange_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_rep::set_allocated_exchange_id(::std::string* exchange_id) {
  if (exchange_id != NULL) {
    
  } else {
    
  }
  exchange_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchange_id);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_rep.exchange_id)
}

// string ticker = 2;
void quotation_rep::clear_ticker() {
  ticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_rep::ticker() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
  return ticker_.GetNoArena();
}
void quotation_rep::set_ticker(const ::std::string& value) {
  
  ticker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
}
#if LANG_CXX11
void quotation_rep::set_ticker(::std::string&& value) {
  
  ticker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
}
#endif
void quotation_rep::set_ticker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
}
void quotation_rep::set_ticker(const char* value, size_t size) {
  
  ticker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
}
::std::string* quotation_rep::mutable_ticker() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
  return ticker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_rep::release_ticker() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
  
  return ticker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_rep::set_allocated_ticker(::std::string* ticker) {
  if (ticker != NULL) {
    
  } else {
    
  }
  ticker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticker);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_rep.ticker)
}

// string code = 3;
void quotation_rep::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_rep::code() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
  return code_.GetNoArena();
}
void quotation_rep::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
}
#if LANG_CXX11
void quotation_rep::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
}
#endif
void quotation_rep::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
}
void quotation_rep::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
}
::std::string* quotation_rep::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_rep::release_code() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_rep::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_rep.code)
}

// double last_price = 4;
void quotation_rep::clear_last_price() {
  last_price_ = 0;
}
double quotation_rep::last_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.last_price)
  return last_price_;
}
void quotation_rep::set_last_price(double value) {
  
  last_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.last_price)
}

// double pre_close_price = 5;
void quotation_rep::clear_pre_close_price() {
  pre_close_price_ = 0;
}
double quotation_rep::pre_close_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_close_price)
  return pre_close_price_;
}
void quotation_rep::set_pre_close_price(double value) {
  
  pre_close_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_close_price)
}

// double open = 6;
void quotation_rep::clear_open() {
  open_ = 0;
}
double quotation_rep::open() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.open)
  return open_;
}
void quotation_rep::set_open(double value) {
  
  open_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.open)
}

// double high = 7;
void quotation_rep::clear_high() {
  high_ = 0;
}
double quotation_rep::high() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.high)
  return high_;
}
void quotation_rep::set_high(double value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.high)
}

// double low = 8;
void quotation_rep::clear_low() {
  low_ = 0;
}
double quotation_rep::low() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.low)
  return low_;
}
void quotation_rep::set_low(double value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.low)
}

// double close = 9;
void quotation_rep::clear_close() {
  close_ = 0;
}
double quotation_rep::close() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.close)
  return close_;
}
void quotation_rep::set_close(double value) {
  
  close_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.close)
}

// double close_price = 10;
void quotation_rep::clear_close_price() {
  close_price_ = 0;
}
double quotation_rep::close_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.close_price)
  return close_price_;
}
void quotation_rep::set_close_price(double value) {
  
  close_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.close_price)
}

// double pre_open_interest = 11;
void quotation_rep::clear_pre_open_interest() {
  pre_open_interest_ = 0;
}
double quotation_rep::pre_open_interest() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_open_interest)
  return pre_open_interest_;
}
void quotation_rep::set_pre_open_interest(double value) {
  
  pre_open_interest_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_open_interest)
}

// double open_interest = 12;
void quotation_rep::clear_open_interest() {
  open_interest_ = 0;
}
double quotation_rep::open_interest() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.open_interest)
  return open_interest_;
}
void quotation_rep::set_open_interest(double value) {
  
  open_interest_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.open_interest)
}

// double pre_settlement_price = 13;
void quotation_rep::clear_pre_settlement_price() {
  pre_settlement_price_ = 0;
}
double quotation_rep::pre_settlement_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_settlement_price)
  return pre_settlement_price_;
}
void quotation_rep::set_pre_settlement_price(double value) {
  
  pre_settlement_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_settlement_price)
}

// double settlement_price = 14;
void quotation_rep::clear_settlement_price() {
  settlement_price_ = 0;
}
double quotation_rep::settlement_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.settlement_price)
  return settlement_price_;
}
void quotation_rep::set_settlement_price(double value) {
  
  settlement_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.settlement_price)
}

// double upper_limit_price = 15;
void quotation_rep::clear_upper_limit_price() {
  upper_limit_price_ = 0;
}
double quotation_rep::upper_limit_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.upper_limit_price)
  return upper_limit_price_;
}
void quotation_rep::set_upper_limit_price(double value) {
  
  upper_limit_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.upper_limit_price)
}

// double lower_limit_price = 16;
void quotation_rep::clear_lower_limit_price() {
  lower_limit_price_ = 0;
}
double quotation_rep::lower_limit_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.lower_limit_price)
  return lower_limit_price_;
}
void quotation_rep::set_lower_limit_price(double value) {
  
  lower_limit_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.lower_limit_price)
}

// double pre_delta = 17;
void quotation_rep::clear_pre_delta() {
  pre_delta_ = 0;
}
double quotation_rep::pre_delta() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_delta)
  return pre_delta_;
}
void quotation_rep::set_pre_delta(double value) {
  
  pre_delta_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.pre_delta)
}

// double curr_delta = 18;
void quotation_rep::clear_curr_delta() {
  curr_delta_ = 0;
}
double quotation_rep::curr_delta() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.curr_delta)
  return curr_delta_;
}
void quotation_rep::set_curr_delta(double value) {
  
  curr_delta_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.curr_delta)
}

// sint64 data_time = 19;
void quotation_rep::clear_data_time() {
  data_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 quotation_rep::data_time() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.data_time)
  return data_time_;
}
void quotation_rep::set_data_time(::google::protobuf::int64 value) {
  
  data_time_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.data_time)
}

// string datetime = 20;
void quotation_rep::clear_datetime() {
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& quotation_rep::datetime() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
  return datetime_.GetNoArena();
}
void quotation_rep::set_datetime(const ::std::string& value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
}
#if LANG_CXX11
void quotation_rep::set_datetime(::std::string&& value) {
  
  datetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
}
#endif
void quotation_rep::set_datetime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
}
void quotation_rep::set_datetime(const char* value, size_t size) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
}
::std::string* quotation_rep::mutable_datetime() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
  return datetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* quotation_rep::release_datetime() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
  
  return datetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void quotation_rep::set_allocated_datetime(::std::string* datetime) {
  if (datetime != NULL) {
    
  } else {
    
  }
  datetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datetime);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Quotation.quotation_rep.datetime)
}

// sint64 qty = 21;
void quotation_rep::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 quotation_rep::qty() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.qty)
  return qty_;
}
void quotation_rep::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.qty)
}

// float volume = 22;
void quotation_rep::clear_volume() {
  volume_ = 0;
}
float quotation_rep::volume() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.volume)
  return volume_;
}
void quotation_rep::set_volume(float value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.volume)
}

// float vol = 23;
void quotation_rep::clear_vol() {
  vol_ = 0;
}
float quotation_rep::vol() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.vol)
  return vol_;
}
void quotation_rep::set_vol(float value) {
  
  vol_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.vol)
}

// double turnover = 24;
void quotation_rep::clear_turnover() {
  turnover_ = 0;
}
double quotation_rep::turnover() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.turnover)
  return turnover_;
}
void quotation_rep::set_turnover(double value) {
  
  turnover_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.turnover)
}

// double avg_price = 25;
void quotation_rep::clear_avg_price() {
  avg_price_ = 0;
}
double quotation_rep::avg_price() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.avg_price)
  return avg_price_;
}
void quotation_rep::set_avg_price(double value) {
  
  avg_price_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.avg_price)
}

// double iopv = 26;
void quotation_rep::clear_iopv() {
  iopv_ = 0;
}
double quotation_rep::iopv() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.iopv)
  return iopv_;
}
void quotation_rep::set_iopv(double value) {
  
  iopv_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.iopv)
}

// sint32 etf_buy_count = 27;
void quotation_rep::clear_etf_buy_count() {
  etf_buy_count_ = 0;
}
::google::protobuf::int32 quotation_rep::etf_buy_count() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_count)
  return etf_buy_count_;
}
void quotation_rep::set_etf_buy_count(::google::protobuf::int32 value) {
  
  etf_buy_count_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_count)
}

// sint32 etf_sell_count = 28;
void quotation_rep::clear_etf_sell_count() {
  etf_sell_count_ = 0;
}
::google::protobuf::int32 quotation_rep::etf_sell_count() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_count)
  return etf_sell_count_;
}
void quotation_rep::set_etf_sell_count(::google::protobuf::int32 value) {
  
  etf_sell_count_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_count)
}

// double etf_buy_qty = 29;
void quotation_rep::clear_etf_buy_qty() {
  etf_buy_qty_ = 0;
}
double quotation_rep::etf_buy_qty() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_qty)
  return etf_buy_qty_;
}
void quotation_rep::set_etf_buy_qty(double value) {
  
  etf_buy_qty_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_qty)
}

// double etf_buy_money = 30;
void quotation_rep::clear_etf_buy_money() {
  etf_buy_money_ = 0;
}
double quotation_rep::etf_buy_money() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_money)
  return etf_buy_money_;
}
void quotation_rep::set_etf_buy_money(double value) {
  
  etf_buy_money_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_buy_money)
}

// double etf_sell_qty = 31;
void quotation_rep::clear_etf_sell_qty() {
  etf_sell_qty_ = 0;
}
double quotation_rep::etf_sell_qty() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_qty)
  return etf_sell_qty_;
}
void quotation_rep::set_etf_sell_qty(double value) {
  
  etf_sell_qty_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_qty)
}

// double etf_sell_money = 32;
void quotation_rep::clear_etf_sell_money() {
  etf_sell_money_ = 0;
}
double quotation_rep::etf_sell_money() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_money)
  return etf_sell_money_;
}
void quotation_rep::set_etf_sell_money(double value) {
  
  etf_sell_money_ = value;
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Quotation.quotation_rep.etf_sell_money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace QUANTAXIS_Runtime_Quotation

// @@protoc_insertion_point(global_scope)
