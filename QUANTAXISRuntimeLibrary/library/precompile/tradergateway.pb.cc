// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tradergateway.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tradergateway.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QUANTAXIS_Runtime_Tradergateway {
class tradergateway_req_traderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<tradergateway_req_trader>
     _instance;
} _tradergateway_req_trader_default_instance_;
class tradergateway_req_gateway_statusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<tradergateway_req_gateway_status>
     _instance;
} _tradergateway_req_gateway_status_default_instance_;
class tradergateway_req_orderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<tradergateway_req_order>
     _instance;
} _tradergateway_req_order_default_instance_;
class tradergateway_reqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<tradergateway_req>
     _instance;
} _tradergateway_req_default_instance_;

namespace protobuf_tradergateway_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_broker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_clientversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_error_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_error_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_dep_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_credit_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_account_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_heartbeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_encrymethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_rawdatalength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_rejectmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_trader, trader_txpassword_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_gateway_status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_gateway_status, gateway_islogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_gateway_status, gateway_iserror_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req_order, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_broker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tradergateway_req, gateway_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(tradergateway_req_trader)},
  { 25, -1, sizeof(tradergateway_req_gateway_status)},
  { 32, -1, sizeof(tradergateway_req_order)},
  { 38, -1, sizeof(tradergateway_req)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_tradergateway_req_trader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tradergateway_req_gateway_status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tradergateway_req_order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_tradergateway_req_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tradergateway.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _tradergateway_req_trader_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_tradergateway_req_trader_default_instance_);_tradergateway_req_gateway_status_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_tradergateway_req_gateway_status_default_instance_);_tradergateway_req_order_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_tradergateway_req_order_default_instance_);_tradergateway_req_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_tradergateway_req_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023tradergateway.proto\022\037QUANTAXIS_Runtime"
      "_Tradergateway\"\205\006\n\021tradergateway_req\022\026\n\016"
      "gateway_broker\030\001 \001(\t\022\024\n\014gateway_user\030\002 \001"
      "(\t\022\030\n\020gateway_password\030\003 \001(\t\022\025\n\rgateway_"
      "token\030\004 \001(\t\022\027\n\017gateway_session\030\005 \001(\t\022\027\n\017"
      "gateway_message\030\006 \001(\t\032\202\004\n\006trader\022\025\n\rtrad"
      "er_broker\030\001 \001(\t\022\023\n\013trader_user\030\002 \001(\t\022\027\n\017"
      "trader_password\030\003 \001(\t\022\024\n\014trader_token\030\004 "
      "\001(\t\022\026\n\016trader_session\030\005 \001(\t\022\021\n\ttrader_ip"
      "\030\006 \001(\t\022\023\n\013trader_port\030\007 \001(\t\022\034\n\024trader_cl"
      "ientversion\030\010 \001(\t\022\022\n\ntrader_ret\030\t \001(\t\022\034\n"
      "\024trader_error_context\030\n \001(\t\022\027\n\017trader_er"
      "ror_id\030\013 \001(\t\022\025\n\rtrader_dep_id\030\014 \001(\t\022\035\n\025t"
      "rader_credit_account\030\r \001(\t\022\034\n\024trader_acc"
      "ount_model\030\016 \001(\t\022\023\n\013trader_time\030\017 \001(\t\022\030\n"
      "\020trader_heartbeat\030\020 \001(\t\022\032\n\022trader_encrym"
      "ethod\030\021 \001(\t\022\034\n\024trader_rawdatalength\030\022 \001("
      "\t\022\034\n\024trader_rejectmessage\030\023 \001(\t\022\031\n\021trade"
      "r_txpassword\030\024 \001(\t\032B\n\016gateway_status\022\027\n\017"
      "gateway_islogin\030\001 \001(\t\022\027\n\017gateway_iserror"
      "\030\002 \001(\t\032\026\n\005order\022\r\n\005order\030\001 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 838);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tradergateway.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tradergateway_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tradergateway_req_trader::kTraderBrokerFieldNumber;
const int tradergateway_req_trader::kTraderUserFieldNumber;
const int tradergateway_req_trader::kTraderPasswordFieldNumber;
const int tradergateway_req_trader::kTraderTokenFieldNumber;
const int tradergateway_req_trader::kTraderSessionFieldNumber;
const int tradergateway_req_trader::kTraderIpFieldNumber;
const int tradergateway_req_trader::kTraderPortFieldNumber;
const int tradergateway_req_trader::kTraderClientversionFieldNumber;
const int tradergateway_req_trader::kTraderRetFieldNumber;
const int tradergateway_req_trader::kTraderErrorContextFieldNumber;
const int tradergateway_req_trader::kTraderErrorIdFieldNumber;
const int tradergateway_req_trader::kTraderDepIdFieldNumber;
const int tradergateway_req_trader::kTraderCreditAccountFieldNumber;
const int tradergateway_req_trader::kTraderAccountModelFieldNumber;
const int tradergateway_req_trader::kTraderTimeFieldNumber;
const int tradergateway_req_trader::kTraderHeartbeatFieldNumber;
const int tradergateway_req_trader::kTraderEncrymethodFieldNumber;
const int tradergateway_req_trader::kTraderRawdatalengthFieldNumber;
const int tradergateway_req_trader::kTraderRejectmessageFieldNumber;
const int tradergateway_req_trader::kTraderTxpasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tradergateway_req_trader::tradergateway_req_trader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tradergateway_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
}
tradergateway_req_trader::tradergateway_req_trader(const tradergateway_req_trader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trader_broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_broker().size() > 0) {
    trader_broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_broker_);
  }
  trader_user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_user().size() > 0) {
    trader_user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_user_);
  }
  trader_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_password().size() > 0) {
    trader_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_password_);
  }
  trader_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_token().size() > 0) {
    trader_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_token_);
  }
  trader_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_session().size() > 0) {
    trader_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_session_);
  }
  trader_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_ip().size() > 0) {
    trader_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_ip_);
  }
  trader_port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_port().size() > 0) {
    trader_port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_port_);
  }
  trader_clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_clientversion().size() > 0) {
    trader_clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_clientversion_);
  }
  trader_ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_ret().size() > 0) {
    trader_ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_ret_);
  }
  trader_error_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_error_context().size() > 0) {
    trader_error_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_error_context_);
  }
  trader_error_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_error_id().size() > 0) {
    trader_error_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_error_id_);
  }
  trader_dep_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_dep_id().size() > 0) {
    trader_dep_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_dep_id_);
  }
  trader_credit_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_credit_account().size() > 0) {
    trader_credit_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_credit_account_);
  }
  trader_account_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_account_model().size() > 0) {
    trader_account_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_account_model_);
  }
  trader_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_time().size() > 0) {
    trader_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_time_);
  }
  trader_heartbeat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_heartbeat().size() > 0) {
    trader_heartbeat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_heartbeat_);
  }
  trader_encrymethod_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_encrymethod().size() > 0) {
    trader_encrymethod_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_encrymethod_);
  }
  trader_rawdatalength_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_rawdatalength().size() > 0) {
    trader_rawdatalength_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_rawdatalength_);
  }
  trader_rejectmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_rejectmessage().size() > 0) {
    trader_rejectmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_rejectmessage_);
  }
  trader_txpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trader_txpassword().size() > 0) {
    trader_txpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_txpassword_);
  }
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
}

void tradergateway_req_trader::SharedCtor() {
  trader_broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_dep_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_credit_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_account_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_heartbeat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_encrymethod_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rawdatalength_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rejectmessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_txpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

tradergateway_req_trader::~tradergateway_req_trader() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  SharedDtor();
}

void tradergateway_req_trader::SharedDtor() {
  trader_broker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_dep_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_credit_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_account_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_heartbeat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_encrymethod_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rawdatalength_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rejectmessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_txpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tradergateway_req_trader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tradergateway_req_trader::descriptor() {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tradergateway_req_trader& tradergateway_req_trader::default_instance() {
  protobuf_tradergateway_2eproto::InitDefaults();
  return *internal_default_instance();
}

tradergateway_req_trader* tradergateway_req_trader::New(::google::protobuf::Arena* arena) const {
  tradergateway_req_trader* n = new tradergateway_req_trader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tradergateway_req_trader::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trader_broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_error_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_dep_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_credit_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_account_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_heartbeat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_encrymethod_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rawdatalength_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_rejectmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trader_txpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tradergateway_req_trader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string trader_broker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_broker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_broker().data(), static_cast<int>(this->trader_broker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_user().data(), static_cast<int>(this->trader_user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_password().data(), static_cast<int>(this->trader_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_token().data(), static_cast<int>(this->trader_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_session = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_session()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_session().data(), static_cast<int>(this->trader_session().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_ip().data(), static_cast<int>(this->trader_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_port()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_port().data(), static_cast<int>(this->trader_port().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_clientversion = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_clientversion().data(), static_cast<int>(this->trader_clientversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_ret = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_ret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_ret().data(), static_cast<int>(this->trader_ret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_error_context = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_error_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_error_context().data(), static_cast<int>(this->trader_error_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_error_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_error_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_error_id().data(), static_cast<int>(this->trader_error_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_dep_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_dep_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_dep_id().data(), static_cast<int>(this->trader_dep_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_credit_account = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_credit_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_credit_account().data(), static_cast<int>(this->trader_credit_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_account_model = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_account_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_account_model().data(), static_cast<int>(this->trader_account_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_time().data(), static_cast<int>(this->trader_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_heartbeat = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_heartbeat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_heartbeat().data(), static_cast<int>(this->trader_heartbeat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_encrymethod = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_encrymethod()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_encrymethod().data(), static_cast<int>(this->trader_encrymethod().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_rawdatalength = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_rawdatalength()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_rawdatalength().data(), static_cast<int>(this->trader_rawdatalength().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_rejectmessage = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_rejectmessage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_rejectmessage().data(), static_cast<int>(this->trader_rejectmessage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trader_txpassword = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trader_txpassword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trader_txpassword().data(), static_cast<int>(this->trader_txpassword().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  return false;
#undef DO_
}

void tradergateway_req_trader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trader_broker = 1;
  if (this->trader_broker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_broker().data(), static_cast<int>(this->trader_broker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trader_broker(), output);
  }

  // string trader_user = 2;
  if (this->trader_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_user().data(), static_cast<int>(this->trader_user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trader_user(), output);
  }

  // string trader_password = 3;
  if (this->trader_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_password().data(), static_cast<int>(this->trader_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->trader_password(), output);
  }

  // string trader_token = 4;
  if (this->trader_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_token().data(), static_cast<int>(this->trader_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->trader_token(), output);
  }

  // string trader_session = 5;
  if (this->trader_session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_session().data(), static_cast<int>(this->trader_session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->trader_session(), output);
  }

  // string trader_ip = 6;
  if (this->trader_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_ip().data(), static_cast<int>(this->trader_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->trader_ip(), output);
  }

  // string trader_port = 7;
  if (this->trader_port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_port().data(), static_cast<int>(this->trader_port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->trader_port(), output);
  }

  // string trader_clientversion = 8;
  if (this->trader_clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_clientversion().data(), static_cast<int>(this->trader_clientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->trader_clientversion(), output);
  }

  // string trader_ret = 9;
  if (this->trader_ret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_ret().data(), static_cast<int>(this->trader_ret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->trader_ret(), output);
  }

  // string trader_error_context = 10;
  if (this->trader_error_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_error_context().data(), static_cast<int>(this->trader_error_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->trader_error_context(), output);
  }

  // string trader_error_id = 11;
  if (this->trader_error_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_error_id().data(), static_cast<int>(this->trader_error_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->trader_error_id(), output);
  }

  // string trader_dep_id = 12;
  if (this->trader_dep_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_dep_id().data(), static_cast<int>(this->trader_dep_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->trader_dep_id(), output);
  }

  // string trader_credit_account = 13;
  if (this->trader_credit_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_credit_account().data(), static_cast<int>(this->trader_credit_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->trader_credit_account(), output);
  }

  // string trader_account_model = 14;
  if (this->trader_account_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_account_model().data(), static_cast<int>(this->trader_account_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->trader_account_model(), output);
  }

  // string trader_time = 15;
  if (this->trader_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_time().data(), static_cast<int>(this->trader_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->trader_time(), output);
  }

  // string trader_heartbeat = 16;
  if (this->trader_heartbeat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_heartbeat().data(), static_cast<int>(this->trader_heartbeat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->trader_heartbeat(), output);
  }

  // string trader_encrymethod = 17;
  if (this->trader_encrymethod().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_encrymethod().data(), static_cast<int>(this->trader_encrymethod().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->trader_encrymethod(), output);
  }

  // string trader_rawdatalength = 18;
  if (this->trader_rawdatalength().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_rawdatalength().data(), static_cast<int>(this->trader_rawdatalength().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->trader_rawdatalength(), output);
  }

  // string trader_rejectmessage = 19;
  if (this->trader_rejectmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_rejectmessage().data(), static_cast<int>(this->trader_rejectmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->trader_rejectmessage(), output);
  }

  // string trader_txpassword = 20;
  if (this->trader_txpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_txpassword().data(), static_cast<int>(this->trader_txpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->trader_txpassword(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
}

::google::protobuf::uint8* tradergateway_req_trader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trader_broker = 1;
  if (this->trader_broker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_broker().data(), static_cast<int>(this->trader_broker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trader_broker(), target);
  }

  // string trader_user = 2;
  if (this->trader_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_user().data(), static_cast<int>(this->trader_user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trader_user(), target);
  }

  // string trader_password = 3;
  if (this->trader_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_password().data(), static_cast<int>(this->trader_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->trader_password(), target);
  }

  // string trader_token = 4;
  if (this->trader_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_token().data(), static_cast<int>(this->trader_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->trader_token(), target);
  }

  // string trader_session = 5;
  if (this->trader_session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_session().data(), static_cast<int>(this->trader_session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->trader_session(), target);
  }

  // string trader_ip = 6;
  if (this->trader_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_ip().data(), static_cast<int>(this->trader_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->trader_ip(), target);
  }

  // string trader_port = 7;
  if (this->trader_port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_port().data(), static_cast<int>(this->trader_port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->trader_port(), target);
  }

  // string trader_clientversion = 8;
  if (this->trader_clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_clientversion().data(), static_cast<int>(this->trader_clientversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->trader_clientversion(), target);
  }

  // string trader_ret = 9;
  if (this->trader_ret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_ret().data(), static_cast<int>(this->trader_ret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->trader_ret(), target);
  }

  // string trader_error_context = 10;
  if (this->trader_error_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_error_context().data(), static_cast<int>(this->trader_error_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->trader_error_context(), target);
  }

  // string trader_error_id = 11;
  if (this->trader_error_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_error_id().data(), static_cast<int>(this->trader_error_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->trader_error_id(), target);
  }

  // string trader_dep_id = 12;
  if (this->trader_dep_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_dep_id().data(), static_cast<int>(this->trader_dep_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->trader_dep_id(), target);
  }

  // string trader_credit_account = 13;
  if (this->trader_credit_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_credit_account().data(), static_cast<int>(this->trader_credit_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->trader_credit_account(), target);
  }

  // string trader_account_model = 14;
  if (this->trader_account_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_account_model().data(), static_cast<int>(this->trader_account_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->trader_account_model(), target);
  }

  // string trader_time = 15;
  if (this->trader_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_time().data(), static_cast<int>(this->trader_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->trader_time(), target);
  }

  // string trader_heartbeat = 16;
  if (this->trader_heartbeat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_heartbeat().data(), static_cast<int>(this->trader_heartbeat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->trader_heartbeat(), target);
  }

  // string trader_encrymethod = 17;
  if (this->trader_encrymethod().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_encrymethod().data(), static_cast<int>(this->trader_encrymethod().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->trader_encrymethod(), target);
  }

  // string trader_rawdatalength = 18;
  if (this->trader_rawdatalength().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_rawdatalength().data(), static_cast<int>(this->trader_rawdatalength().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->trader_rawdatalength(), target);
  }

  // string trader_rejectmessage = 19;
  if (this->trader_rejectmessage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_rejectmessage().data(), static_cast<int>(this->trader_rejectmessage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->trader_rejectmessage(), target);
  }

  // string trader_txpassword = 20;
  if (this->trader_txpassword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trader_txpassword().data(), static_cast<int>(this->trader_txpassword().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->trader_txpassword(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  return target;
}

size_t tradergateway_req_trader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string trader_broker = 1;
  if (this->trader_broker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_broker());
  }

  // string trader_user = 2;
  if (this->trader_user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_user());
  }

  // string trader_password = 3;
  if (this->trader_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_password());
  }

  // string trader_token = 4;
  if (this->trader_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_token());
  }

  // string trader_session = 5;
  if (this->trader_session().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_session());
  }

  // string trader_ip = 6;
  if (this->trader_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_ip());
  }

  // string trader_port = 7;
  if (this->trader_port().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_port());
  }

  // string trader_clientversion = 8;
  if (this->trader_clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_clientversion());
  }

  // string trader_ret = 9;
  if (this->trader_ret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_ret());
  }

  // string trader_error_context = 10;
  if (this->trader_error_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_error_context());
  }

  // string trader_error_id = 11;
  if (this->trader_error_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_error_id());
  }

  // string trader_dep_id = 12;
  if (this->trader_dep_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_dep_id());
  }

  // string trader_credit_account = 13;
  if (this->trader_credit_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_credit_account());
  }

  // string trader_account_model = 14;
  if (this->trader_account_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_account_model());
  }

  // string trader_time = 15;
  if (this->trader_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_time());
  }

  // string trader_heartbeat = 16;
  if (this->trader_heartbeat().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_heartbeat());
  }

  // string trader_encrymethod = 17;
  if (this->trader_encrymethod().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_encrymethod());
  }

  // string trader_rawdatalength = 18;
  if (this->trader_rawdatalength().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_rawdatalength());
  }

  // string trader_rejectmessage = 19;
  if (this->trader_rejectmessage().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_rejectmessage());
  }

  // string trader_txpassword = 20;
  if (this->trader_txpassword().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trader_txpassword());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tradergateway_req_trader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  GOOGLE_DCHECK_NE(&from, this);
  const tradergateway_req_trader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tradergateway_req_trader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
    MergeFrom(*source);
  }
}

void tradergateway_req_trader::MergeFrom(const tradergateway_req_trader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trader_broker().size() > 0) {

    trader_broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_broker_);
  }
  if (from.trader_user().size() > 0) {

    trader_user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_user_);
  }
  if (from.trader_password().size() > 0) {

    trader_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_password_);
  }
  if (from.trader_token().size() > 0) {

    trader_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_token_);
  }
  if (from.trader_session().size() > 0) {

    trader_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_session_);
  }
  if (from.trader_ip().size() > 0) {

    trader_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_ip_);
  }
  if (from.trader_port().size() > 0) {

    trader_port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_port_);
  }
  if (from.trader_clientversion().size() > 0) {

    trader_clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_clientversion_);
  }
  if (from.trader_ret().size() > 0) {

    trader_ret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_ret_);
  }
  if (from.trader_error_context().size() > 0) {

    trader_error_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_error_context_);
  }
  if (from.trader_error_id().size() > 0) {

    trader_error_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_error_id_);
  }
  if (from.trader_dep_id().size() > 0) {

    trader_dep_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_dep_id_);
  }
  if (from.trader_credit_account().size() > 0) {

    trader_credit_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_credit_account_);
  }
  if (from.trader_account_model().size() > 0) {

    trader_account_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_account_model_);
  }
  if (from.trader_time().size() > 0) {

    trader_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_time_);
  }
  if (from.trader_heartbeat().size() > 0) {

    trader_heartbeat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_heartbeat_);
  }
  if (from.trader_encrymethod().size() > 0) {

    trader_encrymethod_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_encrymethod_);
  }
  if (from.trader_rawdatalength().size() > 0) {

    trader_rawdatalength_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_rawdatalength_);
  }
  if (from.trader_rejectmessage().size() > 0) {

    trader_rejectmessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_rejectmessage_);
  }
  if (from.trader_txpassword().size() > 0) {

    trader_txpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trader_txpassword_);
  }
}

void tradergateway_req_trader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tradergateway_req_trader::CopyFrom(const tradergateway_req_trader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tradergateway_req_trader::IsInitialized() const {
  return true;
}

void tradergateway_req_trader::Swap(tradergateway_req_trader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tradergateway_req_trader::InternalSwap(tradergateway_req_trader* other) {
  using std::swap;
  trader_broker_.Swap(&other->trader_broker_);
  trader_user_.Swap(&other->trader_user_);
  trader_password_.Swap(&other->trader_password_);
  trader_token_.Swap(&other->trader_token_);
  trader_session_.Swap(&other->trader_session_);
  trader_ip_.Swap(&other->trader_ip_);
  trader_port_.Swap(&other->trader_port_);
  trader_clientversion_.Swap(&other->trader_clientversion_);
  trader_ret_.Swap(&other->trader_ret_);
  trader_error_context_.Swap(&other->trader_error_context_);
  trader_error_id_.Swap(&other->trader_error_id_);
  trader_dep_id_.Swap(&other->trader_dep_id_);
  trader_credit_account_.Swap(&other->trader_credit_account_);
  trader_account_model_.Swap(&other->trader_account_model_);
  trader_time_.Swap(&other->trader_time_);
  trader_heartbeat_.Swap(&other->trader_heartbeat_);
  trader_encrymethod_.Swap(&other->trader_encrymethod_);
  trader_rawdatalength_.Swap(&other->trader_rawdatalength_);
  trader_rejectmessage_.Swap(&other->trader_rejectmessage_);
  trader_txpassword_.Swap(&other->trader_txpassword_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tradergateway_req_trader::GetMetadata() const {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tradergateway_req_trader

// string trader_broker = 1;
void tradergateway_req_trader::clear_trader_broker() {
  trader_broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_broker() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
  return trader_broker_.GetNoArena();
}
void tradergateway_req_trader::set_trader_broker(const ::std::string& value) {
  
  trader_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_broker(::std::string&& value) {
  
  trader_broker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
}
#endif
void tradergateway_req_trader::set_trader_broker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
}
void tradergateway_req_trader::set_trader_broker(const char* value, size_t size) {
  
  trader_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
}
::std::string* tradergateway_req_trader::mutable_trader_broker() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
  return trader_broker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_broker() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
  
  return trader_broker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_broker(::std::string* trader_broker) {
  if (trader_broker != NULL) {
    
  } else {
    
  }
  trader_broker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_broker);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_broker)
}

// string trader_user = 2;
void tradergateway_req_trader::clear_trader_user() {
  trader_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_user() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
  return trader_user_.GetNoArena();
}
void tradergateway_req_trader::set_trader_user(const ::std::string& value) {
  
  trader_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_user(::std::string&& value) {
  
  trader_user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
}
#endif
void tradergateway_req_trader::set_trader_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
}
void tradergateway_req_trader::set_trader_user(const char* value, size_t size) {
  
  trader_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
}
::std::string* tradergateway_req_trader::mutable_trader_user() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
  return trader_user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_user() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
  
  return trader_user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_user(::std::string* trader_user) {
  if (trader_user != NULL) {
    
  } else {
    
  }
  trader_user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_user);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_user)
}

// string trader_password = 3;
void tradergateway_req_trader::clear_trader_password() {
  trader_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_password() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
  return trader_password_.GetNoArena();
}
void tradergateway_req_trader::set_trader_password(const ::std::string& value) {
  
  trader_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_password(::std::string&& value) {
  
  trader_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
}
#endif
void tradergateway_req_trader::set_trader_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
}
void tradergateway_req_trader::set_trader_password(const char* value, size_t size) {
  
  trader_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
}
::std::string* tradergateway_req_trader::mutable_trader_password() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
  return trader_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_password() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
  
  return trader_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_password(::std::string* trader_password) {
  if (trader_password != NULL) {
    
  } else {
    
  }
  trader_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_password);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_password)
}

// string trader_token = 4;
void tradergateway_req_trader::clear_trader_token() {
  trader_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_token() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
  return trader_token_.GetNoArena();
}
void tradergateway_req_trader::set_trader_token(const ::std::string& value) {
  
  trader_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_token(::std::string&& value) {
  
  trader_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
}
#endif
void tradergateway_req_trader::set_trader_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
}
void tradergateway_req_trader::set_trader_token(const char* value, size_t size) {
  
  trader_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
}
::std::string* tradergateway_req_trader::mutable_trader_token() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
  return trader_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_token() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
  
  return trader_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_token(::std::string* trader_token) {
  if (trader_token != NULL) {
    
  } else {
    
  }
  trader_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_token);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_token)
}

// string trader_session = 5;
void tradergateway_req_trader::clear_trader_session() {
  trader_session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_session() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
  return trader_session_.GetNoArena();
}
void tradergateway_req_trader::set_trader_session(const ::std::string& value) {
  
  trader_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_session(::std::string&& value) {
  
  trader_session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
}
#endif
void tradergateway_req_trader::set_trader_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
}
void tradergateway_req_trader::set_trader_session(const char* value, size_t size) {
  
  trader_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
}
::std::string* tradergateway_req_trader::mutable_trader_session() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
  return trader_session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_session() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
  
  return trader_session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_session(::std::string* trader_session) {
  if (trader_session != NULL) {
    
  } else {
    
  }
  trader_session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_session);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_session)
}

// string trader_ip = 6;
void tradergateway_req_trader::clear_trader_ip() {
  trader_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_ip() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
  return trader_ip_.GetNoArena();
}
void tradergateway_req_trader::set_trader_ip(const ::std::string& value) {
  
  trader_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_ip(::std::string&& value) {
  
  trader_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
}
#endif
void tradergateway_req_trader::set_trader_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
}
void tradergateway_req_trader::set_trader_ip(const char* value, size_t size) {
  
  trader_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
}
::std::string* tradergateway_req_trader::mutable_trader_ip() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
  return trader_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_ip() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
  
  return trader_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_ip(::std::string* trader_ip) {
  if (trader_ip != NULL) {
    
  } else {
    
  }
  trader_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_ip);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ip)
}

// string trader_port = 7;
void tradergateway_req_trader::clear_trader_port() {
  trader_port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_port() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
  return trader_port_.GetNoArena();
}
void tradergateway_req_trader::set_trader_port(const ::std::string& value) {
  
  trader_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_port(::std::string&& value) {
  
  trader_port_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
}
#endif
void tradergateway_req_trader::set_trader_port(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
}
void tradergateway_req_trader::set_trader_port(const char* value, size_t size) {
  
  trader_port_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
}
::std::string* tradergateway_req_trader::mutable_trader_port() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
  return trader_port_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_port() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
  
  return trader_port_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_port(::std::string* trader_port) {
  if (trader_port != NULL) {
    
  } else {
    
  }
  trader_port_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_port);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_port)
}

// string trader_clientversion = 8;
void tradergateway_req_trader::clear_trader_clientversion() {
  trader_clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_clientversion() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
  return trader_clientversion_.GetNoArena();
}
void tradergateway_req_trader::set_trader_clientversion(const ::std::string& value) {
  
  trader_clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_clientversion(::std::string&& value) {
  
  trader_clientversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
}
#endif
void tradergateway_req_trader::set_trader_clientversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
}
void tradergateway_req_trader::set_trader_clientversion(const char* value, size_t size) {
  
  trader_clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
}
::std::string* tradergateway_req_trader::mutable_trader_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
  return trader_clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_clientversion() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
  
  return trader_clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_clientversion(::std::string* trader_clientversion) {
  if (trader_clientversion != NULL) {
    
  } else {
    
  }
  trader_clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_clientversion);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_clientversion)
}

// string trader_ret = 9;
void tradergateway_req_trader::clear_trader_ret() {
  trader_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_ret() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
  return trader_ret_.GetNoArena();
}
void tradergateway_req_trader::set_trader_ret(const ::std::string& value) {
  
  trader_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_ret(::std::string&& value) {
  
  trader_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
}
#endif
void tradergateway_req_trader::set_trader_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
}
void tradergateway_req_trader::set_trader_ret(const char* value, size_t size) {
  
  trader_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
}
::std::string* tradergateway_req_trader::mutable_trader_ret() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
  return trader_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_ret() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
  
  return trader_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_ret(::std::string* trader_ret) {
  if (trader_ret != NULL) {
    
  } else {
    
  }
  trader_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_ret);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_ret)
}

// string trader_error_context = 10;
void tradergateway_req_trader::clear_trader_error_context() {
  trader_error_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_error_context() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
  return trader_error_context_.GetNoArena();
}
void tradergateway_req_trader::set_trader_error_context(const ::std::string& value) {
  
  trader_error_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_error_context(::std::string&& value) {
  
  trader_error_context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
}
#endif
void tradergateway_req_trader::set_trader_error_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_error_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
}
void tradergateway_req_trader::set_trader_error_context(const char* value, size_t size) {
  
  trader_error_context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
}
::std::string* tradergateway_req_trader::mutable_trader_error_context() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
  return trader_error_context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_error_context() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
  
  return trader_error_context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_error_context(::std::string* trader_error_context) {
  if (trader_error_context != NULL) {
    
  } else {
    
  }
  trader_error_context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_error_context);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_context)
}

// string trader_error_id = 11;
void tradergateway_req_trader::clear_trader_error_id() {
  trader_error_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_error_id() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
  return trader_error_id_.GetNoArena();
}
void tradergateway_req_trader::set_trader_error_id(const ::std::string& value) {
  
  trader_error_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_error_id(::std::string&& value) {
  
  trader_error_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
}
#endif
void tradergateway_req_trader::set_trader_error_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_error_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
}
void tradergateway_req_trader::set_trader_error_id(const char* value, size_t size) {
  
  trader_error_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
}
::std::string* tradergateway_req_trader::mutable_trader_error_id() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
  return trader_error_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_error_id() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
  
  return trader_error_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_error_id(::std::string* trader_error_id) {
  if (trader_error_id != NULL) {
    
  } else {
    
  }
  trader_error_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_error_id);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_error_id)
}

// string trader_dep_id = 12;
void tradergateway_req_trader::clear_trader_dep_id() {
  trader_dep_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_dep_id() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
  return trader_dep_id_.GetNoArena();
}
void tradergateway_req_trader::set_trader_dep_id(const ::std::string& value) {
  
  trader_dep_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_dep_id(::std::string&& value) {
  
  trader_dep_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
}
#endif
void tradergateway_req_trader::set_trader_dep_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_dep_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
}
void tradergateway_req_trader::set_trader_dep_id(const char* value, size_t size) {
  
  trader_dep_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
}
::std::string* tradergateway_req_trader::mutable_trader_dep_id() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
  return trader_dep_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_dep_id() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
  
  return trader_dep_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_dep_id(::std::string* trader_dep_id) {
  if (trader_dep_id != NULL) {
    
  } else {
    
  }
  trader_dep_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_dep_id);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_dep_id)
}

// string trader_credit_account = 13;
void tradergateway_req_trader::clear_trader_credit_account() {
  trader_credit_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_credit_account() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
  return trader_credit_account_.GetNoArena();
}
void tradergateway_req_trader::set_trader_credit_account(const ::std::string& value) {
  
  trader_credit_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_credit_account(::std::string&& value) {
  
  trader_credit_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
}
#endif
void tradergateway_req_trader::set_trader_credit_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_credit_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
}
void tradergateway_req_trader::set_trader_credit_account(const char* value, size_t size) {
  
  trader_credit_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
}
::std::string* tradergateway_req_trader::mutable_trader_credit_account() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
  return trader_credit_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_credit_account() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
  
  return trader_credit_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_credit_account(::std::string* trader_credit_account) {
  if (trader_credit_account != NULL) {
    
  } else {
    
  }
  trader_credit_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_credit_account);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_credit_account)
}

// string trader_account_model = 14;
void tradergateway_req_trader::clear_trader_account_model() {
  trader_account_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_account_model() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
  return trader_account_model_.GetNoArena();
}
void tradergateway_req_trader::set_trader_account_model(const ::std::string& value) {
  
  trader_account_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_account_model(::std::string&& value) {
  
  trader_account_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
}
#endif
void tradergateway_req_trader::set_trader_account_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_account_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
}
void tradergateway_req_trader::set_trader_account_model(const char* value, size_t size) {
  
  trader_account_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
}
::std::string* tradergateway_req_trader::mutable_trader_account_model() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
  return trader_account_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_account_model() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
  
  return trader_account_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_account_model(::std::string* trader_account_model) {
  if (trader_account_model != NULL) {
    
  } else {
    
  }
  trader_account_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_account_model);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_account_model)
}

// string trader_time = 15;
void tradergateway_req_trader::clear_trader_time() {
  trader_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_time() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
  return trader_time_.GetNoArena();
}
void tradergateway_req_trader::set_trader_time(const ::std::string& value) {
  
  trader_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_time(::std::string&& value) {
  
  trader_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
}
#endif
void tradergateway_req_trader::set_trader_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
}
void tradergateway_req_trader::set_trader_time(const char* value, size_t size) {
  
  trader_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
}
::std::string* tradergateway_req_trader::mutable_trader_time() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
  return trader_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_time() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
  
  return trader_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_time(::std::string* trader_time) {
  if (trader_time != NULL) {
    
  } else {
    
  }
  trader_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_time);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_time)
}

// string trader_heartbeat = 16;
void tradergateway_req_trader::clear_trader_heartbeat() {
  trader_heartbeat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_heartbeat() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
  return trader_heartbeat_.GetNoArena();
}
void tradergateway_req_trader::set_trader_heartbeat(const ::std::string& value) {
  
  trader_heartbeat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_heartbeat(::std::string&& value) {
  
  trader_heartbeat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
}
#endif
void tradergateway_req_trader::set_trader_heartbeat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_heartbeat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
}
void tradergateway_req_trader::set_trader_heartbeat(const char* value, size_t size) {
  
  trader_heartbeat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
}
::std::string* tradergateway_req_trader::mutable_trader_heartbeat() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
  return trader_heartbeat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_heartbeat() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
  
  return trader_heartbeat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_heartbeat(::std::string* trader_heartbeat) {
  if (trader_heartbeat != NULL) {
    
  } else {
    
  }
  trader_heartbeat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_heartbeat);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_heartbeat)
}

// string trader_encrymethod = 17;
void tradergateway_req_trader::clear_trader_encrymethod() {
  trader_encrymethod_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_encrymethod() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
  return trader_encrymethod_.GetNoArena();
}
void tradergateway_req_trader::set_trader_encrymethod(const ::std::string& value) {
  
  trader_encrymethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_encrymethod(::std::string&& value) {
  
  trader_encrymethod_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
}
#endif
void tradergateway_req_trader::set_trader_encrymethod(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_encrymethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
}
void tradergateway_req_trader::set_trader_encrymethod(const char* value, size_t size) {
  
  trader_encrymethod_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
}
::std::string* tradergateway_req_trader::mutable_trader_encrymethod() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
  return trader_encrymethod_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_encrymethod() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
  
  return trader_encrymethod_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_encrymethod(::std::string* trader_encrymethod) {
  if (trader_encrymethod != NULL) {
    
  } else {
    
  }
  trader_encrymethod_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_encrymethod);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_encrymethod)
}

// string trader_rawdatalength = 18;
void tradergateway_req_trader::clear_trader_rawdatalength() {
  trader_rawdatalength_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_rawdatalength() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
  return trader_rawdatalength_.GetNoArena();
}
void tradergateway_req_trader::set_trader_rawdatalength(const ::std::string& value) {
  
  trader_rawdatalength_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_rawdatalength(::std::string&& value) {
  
  trader_rawdatalength_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
}
#endif
void tradergateway_req_trader::set_trader_rawdatalength(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_rawdatalength_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
}
void tradergateway_req_trader::set_trader_rawdatalength(const char* value, size_t size) {
  
  trader_rawdatalength_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
}
::std::string* tradergateway_req_trader::mutable_trader_rawdatalength() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
  return trader_rawdatalength_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_rawdatalength() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
  
  return trader_rawdatalength_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_rawdatalength(::std::string* trader_rawdatalength) {
  if (trader_rawdatalength != NULL) {
    
  } else {
    
  }
  trader_rawdatalength_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_rawdatalength);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rawdatalength)
}

// string trader_rejectmessage = 19;
void tradergateway_req_trader::clear_trader_rejectmessage() {
  trader_rejectmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_rejectmessage() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
  return trader_rejectmessage_.GetNoArena();
}
void tradergateway_req_trader::set_trader_rejectmessage(const ::std::string& value) {
  
  trader_rejectmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_rejectmessage(::std::string&& value) {
  
  trader_rejectmessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
}
#endif
void tradergateway_req_trader::set_trader_rejectmessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_rejectmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
}
void tradergateway_req_trader::set_trader_rejectmessage(const char* value, size_t size) {
  
  trader_rejectmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
}
::std::string* tradergateway_req_trader::mutable_trader_rejectmessage() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
  return trader_rejectmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_rejectmessage() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
  
  return trader_rejectmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_rejectmessage(::std::string* trader_rejectmessage) {
  if (trader_rejectmessage != NULL) {
    
  } else {
    
  }
  trader_rejectmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_rejectmessage);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_rejectmessage)
}

// string trader_txpassword = 20;
void tradergateway_req_trader::clear_trader_txpassword() {
  trader_txpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_trader::trader_txpassword() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
  return trader_txpassword_.GetNoArena();
}
void tradergateway_req_trader::set_trader_txpassword(const ::std::string& value) {
  
  trader_txpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
}
#if LANG_CXX11
void tradergateway_req_trader::set_trader_txpassword(::std::string&& value) {
  
  trader_txpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
}
#endif
void tradergateway_req_trader::set_trader_txpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trader_txpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
}
void tradergateway_req_trader::set_trader_txpassword(const char* value, size_t size) {
  
  trader_txpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
}
::std::string* tradergateway_req_trader::mutable_trader_txpassword() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
  return trader_txpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_trader::release_trader_txpassword() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
  
  return trader_txpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_trader::set_allocated_trader_txpassword(::std::string* trader_txpassword) {
  if (trader_txpassword != NULL) {
    
  } else {
    
  }
  trader_txpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trader_txpassword);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.trader.trader_txpassword)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tradergateway_req_gateway_status::kGatewayIsloginFieldNumber;
const int tradergateway_req_gateway_status::kGatewayIserrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tradergateway_req_gateway_status::tradergateway_req_gateway_status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tradergateway_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
}
tradergateway_req_gateway_status::tradergateway_req_gateway_status(const tradergateway_req_gateway_status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gateway_islogin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_islogin().size() > 0) {
    gateway_islogin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_islogin_);
  }
  gateway_iserror_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_iserror().size() > 0) {
    gateway_iserror_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_iserror_);
  }
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
}

void tradergateway_req_gateway_status::SharedCtor() {
  gateway_islogin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_iserror_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

tradergateway_req_gateway_status::~tradergateway_req_gateway_status() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  SharedDtor();
}

void tradergateway_req_gateway_status::SharedDtor() {
  gateway_islogin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_iserror_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tradergateway_req_gateway_status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tradergateway_req_gateway_status::descriptor() {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tradergateway_req_gateway_status& tradergateway_req_gateway_status::default_instance() {
  protobuf_tradergateway_2eproto::InitDefaults();
  return *internal_default_instance();
}

tradergateway_req_gateway_status* tradergateway_req_gateway_status::New(::google::protobuf::Arena* arena) const {
  tradergateway_req_gateway_status* n = new tradergateway_req_gateway_status;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tradergateway_req_gateway_status::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gateway_islogin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_iserror_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tradergateway_req_gateway_status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gateway_islogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_islogin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_islogin().data(), static_cast<int>(this->gateway_islogin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_iserror = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_iserror()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_iserror().data(), static_cast<int>(this->gateway_iserror().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  return false;
#undef DO_
}

void tradergateway_req_gateway_status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateway_islogin = 1;
  if (this->gateway_islogin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_islogin().data(), static_cast<int>(this->gateway_islogin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gateway_islogin(), output);
  }

  // string gateway_iserror = 2;
  if (this->gateway_iserror().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_iserror().data(), static_cast<int>(this->gateway_iserror().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gateway_iserror(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
}

::google::protobuf::uint8* tradergateway_req_gateway_status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateway_islogin = 1;
  if (this->gateway_islogin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_islogin().data(), static_cast<int>(this->gateway_islogin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gateway_islogin(), target);
  }

  // string gateway_iserror = 2;
  if (this->gateway_iserror().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_iserror().data(), static_cast<int>(this->gateway_iserror().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gateway_iserror(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  return target;
}

size_t tradergateway_req_gateway_status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gateway_islogin = 1;
  if (this->gateway_islogin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_islogin());
  }

  // string gateway_iserror = 2;
  if (this->gateway_iserror().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_iserror());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tradergateway_req_gateway_status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  GOOGLE_DCHECK_NE(&from, this);
  const tradergateway_req_gateway_status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tradergateway_req_gateway_status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
    MergeFrom(*source);
  }
}

void tradergateway_req_gateway_status::MergeFrom(const tradergateway_req_gateway_status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateway_islogin().size() > 0) {

    gateway_islogin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_islogin_);
  }
  if (from.gateway_iserror().size() > 0) {

    gateway_iserror_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_iserror_);
  }
}

void tradergateway_req_gateway_status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tradergateway_req_gateway_status::CopyFrom(const tradergateway_req_gateway_status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tradergateway_req_gateway_status::IsInitialized() const {
  return true;
}

void tradergateway_req_gateway_status::Swap(tradergateway_req_gateway_status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tradergateway_req_gateway_status::InternalSwap(tradergateway_req_gateway_status* other) {
  using std::swap;
  gateway_islogin_.Swap(&other->gateway_islogin_);
  gateway_iserror_.Swap(&other->gateway_iserror_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tradergateway_req_gateway_status::GetMetadata() const {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tradergateway_req_gateway_status

// string gateway_islogin = 1;
void tradergateway_req_gateway_status::clear_gateway_islogin() {
  gateway_islogin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_gateway_status::gateway_islogin() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
  return gateway_islogin_.GetNoArena();
}
void tradergateway_req_gateway_status::set_gateway_islogin(const ::std::string& value) {
  
  gateway_islogin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
}
#if LANG_CXX11
void tradergateway_req_gateway_status::set_gateway_islogin(::std::string&& value) {
  
  gateway_islogin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
}
#endif
void tradergateway_req_gateway_status::set_gateway_islogin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_islogin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
}
void tradergateway_req_gateway_status::set_gateway_islogin(const char* value, size_t size) {
  
  gateway_islogin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
}
::std::string* tradergateway_req_gateway_status::mutable_gateway_islogin() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
  return gateway_islogin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_gateway_status::release_gateway_islogin() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
  
  return gateway_islogin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_gateway_status::set_allocated_gateway_islogin(::std::string* gateway_islogin) {
  if (gateway_islogin != NULL) {
    
  } else {
    
  }
  gateway_islogin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_islogin);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_islogin)
}

// string gateway_iserror = 2;
void tradergateway_req_gateway_status::clear_gateway_iserror() {
  gateway_iserror_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_gateway_status::gateway_iserror() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
  return gateway_iserror_.GetNoArena();
}
void tradergateway_req_gateway_status::set_gateway_iserror(const ::std::string& value) {
  
  gateway_iserror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
}
#if LANG_CXX11
void tradergateway_req_gateway_status::set_gateway_iserror(::std::string&& value) {
  
  gateway_iserror_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
}
#endif
void tradergateway_req_gateway_status::set_gateway_iserror(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_iserror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
}
void tradergateway_req_gateway_status::set_gateway_iserror(const char* value, size_t size) {
  
  gateway_iserror_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
}
::std::string* tradergateway_req_gateway_status::mutable_gateway_iserror() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
  return gateway_iserror_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_gateway_status::release_gateway_iserror() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
  
  return gateway_iserror_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_gateway_status::set_allocated_gateway_iserror(::std::string* gateway_iserror) {
  if (gateway_iserror != NULL) {
    
  } else {
    
  }
  gateway_iserror_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_iserror);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_status.gateway_iserror)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tradergateway_req_order::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tradergateway_req_order::tradergateway_req_order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tradergateway_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
}
tradergateway_req_order::tradergateway_req_order(const tradergateway_req_order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order().size() > 0) {
    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
}

void tradergateway_req_order::SharedCtor() {
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

tradergateway_req_order::~tradergateway_req_order() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  SharedDtor();
}

void tradergateway_req_order::SharedDtor() {
  order_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tradergateway_req_order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tradergateway_req_order::descriptor() {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tradergateway_req_order& tradergateway_req_order::default_instance() {
  protobuf_tradergateway_2eproto::InitDefaults();
  return *internal_default_instance();
}

tradergateway_req_order* tradergateway_req_order::New(::google::protobuf::Arena* arena) const {
  tradergateway_req_order* n = new tradergateway_req_order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tradergateway_req_order::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tradergateway_req_order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order().data(), static_cast<int>(this->order().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  return false;
#undef DO_
}

void tradergateway_req_order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string order = 1;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->order(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
}

::google::protobuf::uint8* tradergateway_req_order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string order = 1;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  return target;
}

size_t tradergateway_req_order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string order = 1;
  if (this->order().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tradergateway_req_order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  GOOGLE_DCHECK_NE(&from, this);
  const tradergateway_req_order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tradergateway_req_order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
    MergeFrom(*source);
  }
}

void tradergateway_req_order::MergeFrom(const tradergateway_req_order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order().size() > 0) {

    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
}

void tradergateway_req_order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tradergateway_req_order::CopyFrom(const tradergateway_req_order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tradergateway_req_order::IsInitialized() const {
  return true;
}

void tradergateway_req_order::Swap(tradergateway_req_order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tradergateway_req_order::InternalSwap(tradergateway_req_order* other) {
  using std::swap;
  order_.Swap(&other->order_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tradergateway_req_order::GetMetadata() const {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tradergateway_req_order

// string order = 1;
void tradergateway_req_order::clear_order() {
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req_order::order() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
  return order_.GetNoArena();
}
void tradergateway_req_order::set_order(const ::std::string& value) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
}
#if LANG_CXX11
void tradergateway_req_order::set_order(::std::string&& value) {
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
}
#endif
void tradergateway_req_order::set_order(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
}
void tradergateway_req_order::set_order(const char* value, size_t size) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
}
::std::string* tradergateway_req_order::mutable_order() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req_order::release_order() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req_order::set_allocated_order(::std::string* order) {
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.order.order)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tradergateway_req::kGatewayBrokerFieldNumber;
const int tradergateway_req::kGatewayUserFieldNumber;
const int tradergateway_req::kGatewayPasswordFieldNumber;
const int tradergateway_req::kGatewayTokenFieldNumber;
const int tradergateway_req::kGatewaySessionFieldNumber;
const int tradergateway_req::kGatewayMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tradergateway_req::tradergateway_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tradergateway_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
}
tradergateway_req::tradergateway_req(const tradergateway_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gateway_broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_broker().size() > 0) {
    gateway_broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_broker_);
  }
  gateway_user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_user().size() > 0) {
    gateway_user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_user_);
  }
  gateway_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_password().size() > 0) {
    gateway_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_password_);
  }
  gateway_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_token().size() > 0) {
    gateway_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_token_);
  }
  gateway_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_session().size() > 0) {
    gateway_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_session_);
  }
  gateway_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateway_message().size() > 0) {
    gateway_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_message_);
  }
  // @@protoc_insertion_point(copy_constructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
}

void tradergateway_req::SharedCtor() {
  gateway_broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

tradergateway_req::~tradergateway_req() {
  // @@protoc_insertion_point(destructor:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  SharedDtor();
}

void tradergateway_req::SharedDtor() {
  gateway_broker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tradergateway_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tradergateway_req::descriptor() {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tradergateway_req& tradergateway_req::default_instance() {
  protobuf_tradergateway_2eproto::InitDefaults();
  return *internal_default_instance();
}

tradergateway_req* tradergateway_req::New(::google::protobuf::Arena* arena) const {
  tradergateway_req* n = new tradergateway_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void tradergateway_req::Clear() {
// @@protoc_insertion_point(message_clear_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gateway_broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gateway_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tradergateway_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gateway_broker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_broker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_broker().data(), static_cast<int>(this->gateway_broker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_user().data(), static_cast<int>(this->gateway_user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_password().data(), static_cast<int>(this->gateway_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_token().data(), static_cast<int>(this->gateway_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_session = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_session()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_session().data(), static_cast<int>(this->gateway_session().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gateway_message = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateway_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateway_message().data(), static_cast<int>(this->gateway_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  return false;
#undef DO_
}

void tradergateway_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateway_broker = 1;
  if (this->gateway_broker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_broker().data(), static_cast<int>(this->gateway_broker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gateway_broker(), output);
  }

  // string gateway_user = 2;
  if (this->gateway_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_user().data(), static_cast<int>(this->gateway_user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gateway_user(), output);
  }

  // string gateway_password = 3;
  if (this->gateway_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_password().data(), static_cast<int>(this->gateway_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gateway_password(), output);
  }

  // string gateway_token = 4;
  if (this->gateway_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_token().data(), static_cast<int>(this->gateway_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->gateway_token(), output);
  }

  // string gateway_session = 5;
  if (this->gateway_session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_session().data(), static_cast<int>(this->gateway_session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gateway_session(), output);
  }

  // string gateway_message = 6;
  if (this->gateway_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_message().data(), static_cast<int>(this->gateway_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->gateway_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
}

::google::protobuf::uint8* tradergateway_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateway_broker = 1;
  if (this->gateway_broker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_broker().data(), static_cast<int>(this->gateway_broker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gateway_broker(), target);
  }

  // string gateway_user = 2;
  if (this->gateway_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_user().data(), static_cast<int>(this->gateway_user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gateway_user(), target);
  }

  // string gateway_password = 3;
  if (this->gateway_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_password().data(), static_cast<int>(this->gateway_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gateway_password(), target);
  }

  // string gateway_token = 4;
  if (this->gateway_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_token().data(), static_cast<int>(this->gateway_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->gateway_token(), target);
  }

  // string gateway_session = 5;
  if (this->gateway_session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_session().data(), static_cast<int>(this->gateway_session().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gateway_session(), target);
  }

  // string gateway_message = 6;
  if (this->gateway_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateway_message().data(), static_cast<int>(this->gateway_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->gateway_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  return target;
}

size_t tradergateway_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gateway_broker = 1;
  if (this->gateway_broker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_broker());
  }

  // string gateway_user = 2;
  if (this->gateway_user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_user());
  }

  // string gateway_password = 3;
  if (this->gateway_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_password());
  }

  // string gateway_token = 4;
  if (this->gateway_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_token());
  }

  // string gateway_session = 5;
  if (this->gateway_session().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_session());
  }

  // string gateway_message = 6;
  if (this->gateway_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateway_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tradergateway_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  GOOGLE_DCHECK_NE(&from, this);
  const tradergateway_req* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tradergateway_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
    MergeFrom(*source);
  }
}

void tradergateway_req::MergeFrom(const tradergateway_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateway_broker().size() > 0) {

    gateway_broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_broker_);
  }
  if (from.gateway_user().size() > 0) {

    gateway_user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_user_);
  }
  if (from.gateway_password().size() > 0) {

    gateway_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_password_);
  }
  if (from.gateway_token().size() > 0) {

    gateway_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_token_);
  }
  if (from.gateway_session().size() > 0) {

    gateway_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_session_);
  }
  if (from.gateway_message().size() > 0) {

    gateway_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateway_message_);
  }
}

void tradergateway_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tradergateway_req::CopyFrom(const tradergateway_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QUANTAXIS_Runtime_Tradergateway.tradergateway_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tradergateway_req::IsInitialized() const {
  return true;
}

void tradergateway_req::Swap(tradergateway_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tradergateway_req::InternalSwap(tradergateway_req* other) {
  using std::swap;
  gateway_broker_.Swap(&other->gateway_broker_);
  gateway_user_.Swap(&other->gateway_user_);
  gateway_password_.Swap(&other->gateway_password_);
  gateway_token_.Swap(&other->gateway_token_);
  gateway_session_.Swap(&other->gateway_session_);
  gateway_message_.Swap(&other->gateway_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata tradergateway_req::GetMetadata() const {
  protobuf_tradergateway_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tradergateway_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// tradergateway_req

// string gateway_broker = 1;
void tradergateway_req::clear_gateway_broker() {
  gateway_broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_broker() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
  return gateway_broker_.GetNoArena();
}
void tradergateway_req::set_gateway_broker(const ::std::string& value) {
  
  gateway_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_broker(::std::string&& value) {
  
  gateway_broker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
}
#endif
void tradergateway_req::set_gateway_broker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
}
void tradergateway_req::set_gateway_broker(const char* value, size_t size) {
  
  gateway_broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
}
::std::string* tradergateway_req::mutable_gateway_broker() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
  return gateway_broker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_broker() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
  
  return gateway_broker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_broker(::std::string* gateway_broker) {
  if (gateway_broker != NULL) {
    
  } else {
    
  }
  gateway_broker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_broker);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_broker)
}

// string gateway_user = 2;
void tradergateway_req::clear_gateway_user() {
  gateway_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_user() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
  return gateway_user_.GetNoArena();
}
void tradergateway_req::set_gateway_user(const ::std::string& value) {
  
  gateway_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_user(::std::string&& value) {
  
  gateway_user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
}
#endif
void tradergateway_req::set_gateway_user(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
}
void tradergateway_req::set_gateway_user(const char* value, size_t size) {
  
  gateway_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
}
::std::string* tradergateway_req::mutable_gateway_user() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
  return gateway_user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_user() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
  
  return gateway_user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_user(::std::string* gateway_user) {
  if (gateway_user != NULL) {
    
  } else {
    
  }
  gateway_user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_user);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_user)
}

// string gateway_password = 3;
void tradergateway_req::clear_gateway_password() {
  gateway_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_password() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
  return gateway_password_.GetNoArena();
}
void tradergateway_req::set_gateway_password(const ::std::string& value) {
  
  gateway_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_password(::std::string&& value) {
  
  gateway_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
}
#endif
void tradergateway_req::set_gateway_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
}
void tradergateway_req::set_gateway_password(const char* value, size_t size) {
  
  gateway_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
}
::std::string* tradergateway_req::mutable_gateway_password() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
  return gateway_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_password() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
  
  return gateway_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_password(::std::string* gateway_password) {
  if (gateway_password != NULL) {
    
  } else {
    
  }
  gateway_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_password);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_password)
}

// string gateway_token = 4;
void tradergateway_req::clear_gateway_token() {
  gateway_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_token() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
  return gateway_token_.GetNoArena();
}
void tradergateway_req::set_gateway_token(const ::std::string& value) {
  
  gateway_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_token(::std::string&& value) {
  
  gateway_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
}
#endif
void tradergateway_req::set_gateway_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
}
void tradergateway_req::set_gateway_token(const char* value, size_t size) {
  
  gateway_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
}
::std::string* tradergateway_req::mutable_gateway_token() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
  return gateway_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_token() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
  
  return gateway_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_token(::std::string* gateway_token) {
  if (gateway_token != NULL) {
    
  } else {
    
  }
  gateway_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_token);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_token)
}

// string gateway_session = 5;
void tradergateway_req::clear_gateway_session() {
  gateway_session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_session() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
  return gateway_session_.GetNoArena();
}
void tradergateway_req::set_gateway_session(const ::std::string& value) {
  
  gateway_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_session(::std::string&& value) {
  
  gateway_session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
}
#endif
void tradergateway_req::set_gateway_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
}
void tradergateway_req::set_gateway_session(const char* value, size_t size) {
  
  gateway_session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
}
::std::string* tradergateway_req::mutable_gateway_session() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
  return gateway_session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_session() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
  
  return gateway_session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_session(::std::string* gateway_session) {
  if (gateway_session != NULL) {
    
  } else {
    
  }
  gateway_session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_session);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_session)
}

// string gateway_message = 6;
void tradergateway_req::clear_gateway_message() {
  gateway_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& tradergateway_req::gateway_message() const {
  // @@protoc_insertion_point(field_get:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
  return gateway_message_.GetNoArena();
}
void tradergateway_req::set_gateway_message(const ::std::string& value) {
  
  gateway_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
}
#if LANG_CXX11
void tradergateway_req::set_gateway_message(::std::string&& value) {
  
  gateway_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
}
#endif
void tradergateway_req::set_gateway_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateway_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
}
void tradergateway_req::set_gateway_message(const char* value, size_t size) {
  
  gateway_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
}
::std::string* tradergateway_req::mutable_gateway_message() {
  
  // @@protoc_insertion_point(field_mutable:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
  return gateway_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* tradergateway_req::release_gateway_message() {
  // @@protoc_insertion_point(field_release:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
  
  return gateway_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void tradergateway_req::set_allocated_gateway_message(::std::string* gateway_message) {
  if (gateway_message != NULL) {
    
  } else {
    
  }
  gateway_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateway_message);
  // @@protoc_insertion_point(field_set_allocated:QUANTAXIS_Runtime_Tradergateway.tradergateway_req.gateway_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace QUANTAXIS_Runtime_Tradergateway

// @@protoc_insertion_point(global_scope)
