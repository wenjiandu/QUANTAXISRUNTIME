# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import stock_hq_pb2 as stock__hq__pb2
import stock_min_pb2 as stock__min__pb2


class StockHQServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.QA_fetch_get = channel.stream_stream(
        '/stock_hq.StockHQService/QA_fetch_get',
        request_serializer=stock__hq__pb2.Query.SerializeToString,
        response_deserializer=stock__min__pb2.stock_min.FromString,
        )


class StockHQServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def QA_fetch_get(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StockHQServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'QA_fetch_get': grpc.stream_stream_rpc_method_handler(
          servicer.QA_fetch_get,
          request_deserializer=stock__hq__pb2.Query.FromString,
          response_serializer=stock__min__pb2.stock_min.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'stock_hq.StockHQService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
